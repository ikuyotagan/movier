// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: pb/movier.proto

package movier

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExternalSource int32

const (
	ExternalSource_SOURCE_UNSPECIFIED ExternalSource = 0
	ExternalSource_SOURCE_KINOPOISK   ExternalSource = 1
	ExternalSource_SOURCE_IMDB        ExternalSource = 2
)

// Enum value maps for ExternalSource.
var (
	ExternalSource_name = map[int32]string{
		0: "SOURCE_UNSPECIFIED",
		1: "SOURCE_KINOPOISK",
		2: "SOURCE_IMDB",
	}
	ExternalSource_value = map[string]int32{
		"SOURCE_UNSPECIFIED": 0,
		"SOURCE_KINOPOISK":   1,
		"SOURCE_IMDB":        2,
	}
)

func (x ExternalSource) Enum() *ExternalSource {
	p := new(ExternalSource)
	*p = x
	return p
}

func (x ExternalSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalSource) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_movier_proto_enumTypes[0].Descriptor()
}

func (ExternalSource) Type() protoreflect.EnumType {
	return &file_pb_movier_proto_enumTypes[0]
}

func (x ExternalSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalSource.Descriptor instead.
func (ExternalSource) EnumDescriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{0}
}

type MPAARating int32

const (
	MPAARating_MPAA_RATING_UNSPECIFIED MPAARating = 0
	MPAARating_MPAA_RATING_G           MPAARating = 1
	MPAARating_MPAA_RATING_PG          MPAARating = 2
	MPAARating_MPAA_RATING_PG_13       MPAARating = 3
	MPAARating_MPAA_RATING_R           MPAARating = 4
	MPAARating_MPAA_RATING_NC_17       MPAARating = 5
)

// Enum value maps for MPAARating.
var (
	MPAARating_name = map[int32]string{
		0: "MPAA_RATING_UNSPECIFIED",
		1: "MPAA_RATING_G",
		2: "MPAA_RATING_PG",
		3: "MPAA_RATING_PG_13",
		4: "MPAA_RATING_R",
		5: "MPAA_RATING_NC_17",
	}
	MPAARating_value = map[string]int32{
		"MPAA_RATING_UNSPECIFIED": 0,
		"MPAA_RATING_G":           1,
		"MPAA_RATING_PG":          2,
		"MPAA_RATING_PG_13":       3,
		"MPAA_RATING_R":           4,
		"MPAA_RATING_NC_17":       5,
	}
)

func (x MPAARating) Enum() *MPAARating {
	p := new(MPAARating)
	*p = x
	return p
}

func (x MPAARating) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MPAARating) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_movier_proto_enumTypes[1].Descriptor()
}

func (MPAARating) Type() protoreflect.EnumType {
	return &file_pb_movier_proto_enumTypes[1]
}

func (x MPAARating) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MPAARating.Descriptor instead.
func (MPAARating) EnumDescriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{1}
}

// The response message containing the greetings
type CreateMoviesBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*CreateMovieParams `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
}

func (x *CreateMoviesBatchRequest) Reset() {
	*x = CreateMoviesBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMoviesBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMoviesBatchRequest) ProtoMessage() {}

func (x *CreateMoviesBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMoviesBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateMoviesBatchRequest) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMoviesBatchRequest) GetMovies() []*CreateMovieParams {
	if x != nil {
		return x.Movies
	}
	return nil
}

type DeleteMoviesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMoviesRequest) Reset() {
	*x = DeleteMoviesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMoviesRequest) ProtoMessage() {}

func (x *DeleteMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMoviesRequest.ProtoReflect.Descriptor instead.
func (*DeleteMoviesRequest) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteMoviesRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMoviesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteMoviesResponse) Reset() {
	*x = DeleteMoviesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMoviesResponse) ProtoMessage() {}

func (x *DeleteMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMoviesResponse.ProtoReflect.Descriptor instead.
func (*DeleteMoviesResponse) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteMoviesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetMoviesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query           *string       `protobuf:"bytes,1,opt,name=query,proto3,oneof" json:"query,omitempty"`
	Ids             []uint64      `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	GenreIds        []uint64      `protobuf:"varint,3,rep,packed,name=genre_ids,json=genreIds,proto3" json:"genre_ids,omitempty"`
	DateOfReleased  *DateFilter   `protobuf:"bytes,4,opt,name=date_of_released,json=dateOfReleased,proto3,oneof" json:"date_of_released,omitempty"`
	Rating          *RatingFilter `protobuf:"bytes,5,opt,name=rating,proto3,oneof" json:"rating,omitempty"`
	ActorIds        []uint64      `protobuf:"varint,6,rep,packed,name=actor_ids,json=actorIds,proto3" json:"actor_ids,omitempty"`
	DirectorIds     []uint64      `protobuf:"varint,7,rep,packed,name=director_ids,json=directorIds,proto3" json:"director_ids,omitempty"`
	ScreenwriterIds []uint64      `protobuf:"varint,8,rep,packed,name=screenwriter_ids,json=screenwriterIds,proto3" json:"screenwriter_ids,omitempty"`
	CountryIds      []uint64      `protobuf:"varint,9,rep,packed,name=country_ids,json=countryIds,proto3" json:"country_ids,omitempty"`
	Page            uint64        `protobuf:"varint,15,opt,name=page,proto3" json:"page,omitempty"`
	Limit           uint64        `protobuf:"varint,16,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetMoviesRequest) Reset() {
	*x = GetMoviesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoviesRequest) ProtoMessage() {}

func (x *GetMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoviesRequest.ProtoReflect.Descriptor instead.
func (*GetMoviesRequest) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{3}
}

func (x *GetMoviesRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *GetMoviesRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetMoviesRequest) GetGenreIds() []uint64 {
	if x != nil {
		return x.GenreIds
	}
	return nil
}

func (x *GetMoviesRequest) GetDateOfReleased() *DateFilter {
	if x != nil {
		return x.DateOfReleased
	}
	return nil
}

func (x *GetMoviesRequest) GetRating() *RatingFilter {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *GetMoviesRequest) GetActorIds() []uint64 {
	if x != nil {
		return x.ActorIds
	}
	return nil
}

func (x *GetMoviesRequest) GetDirectorIds() []uint64 {
	if x != nil {
		return x.DirectorIds
	}
	return nil
}

func (x *GetMoviesRequest) GetScreenwriterIds() []uint64 {
	if x != nil {
		return x.ScreenwriterIds
	}
	return nil
}

func (x *GetMoviesRequest) GetCountryIds() []uint64 {
	if x != nil {
		return x.CountryIds
	}
	return nil
}

func (x *GetMoviesRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMoviesRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMoviesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies     []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
	TotalPages uint64   `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	TotalLimit uint64   `protobuf:"varint,3,opt,name=total_limit,json=totalLimit,proto3" json:"total_limit,omitempty"`
}

func (x *GetMoviesResponse) Reset() {
	*x = GetMoviesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoviesResponse) ProtoMessage() {}

func (x *GetMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoviesResponse.ProtoReflect.Descriptor instead.
func (*GetMoviesResponse) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{4}
}

func (x *GetMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

func (x *GetMoviesResponse) GetTotalPages() uint64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *GetMoviesResponse) GetTotalLimit() uint64 {
	if x != nil {
		return x.TotalLimit
	}
	return 0
}

type CreateMovieParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalInfo    []*ExternalInfo        `protobuf:"bytes,1,rep,name=external_info,json=externalInfo,proto3" json:"external_info,omitempty"`
	GenreIds        []uint64               `protobuf:"varint,2,rep,packed,name=genre_ids,json=genreIds,proto3" json:"genre_ids,omitempty"`
	DateOfReleased  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_of_released,json=dateOfReleased,proto3" json:"date_of_released,omitempty"`
	PosterUrl       string                 `protobuf:"bytes,4,opt,name=poster_url,json=posterUrl,proto3" json:"poster_url,omitempty"`
	Name            string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	ActorIds        []uint64               `protobuf:"varint,6,rep,packed,name=actor_ids,json=actorIds,proto3" json:"actor_ids,omitempty"`
	DirectorIds     []uint64               `protobuf:"varint,7,rep,packed,name=director_ids,json=directorIds,proto3" json:"director_ids,omitempty"`
	ScreenwriterIds []uint64               `protobuf:"varint,8,rep,packed,name=screenwriter_ids,json=screenwriterIds,proto3" json:"screenwriter_ids,omitempty"`
	Rating          MPAARating             `protobuf:"varint,9,opt,name=rating,proto3,enum=movier.MPAARating" json:"rating,omitempty"`
	Country         *Country               `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *CreateMovieParams) Reset() {
	*x = CreateMovieParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovieParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieParams) ProtoMessage() {}

func (x *CreateMovieParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieParams.ProtoReflect.Descriptor instead.
func (*CreateMovieParams) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMovieParams) GetExternalInfo() []*ExternalInfo {
	if x != nil {
		return x.ExternalInfo
	}
	return nil
}

func (x *CreateMovieParams) GetGenreIds() []uint64 {
	if x != nil {
		return x.GenreIds
	}
	return nil
}

func (x *CreateMovieParams) GetDateOfReleased() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfReleased
	}
	return nil
}

func (x *CreateMovieParams) GetPosterUrl() string {
	if x != nil {
		return x.PosterUrl
	}
	return ""
}

func (x *CreateMovieParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMovieParams) GetActorIds() []uint64 {
	if x != nil {
		return x.ActorIds
	}
	return nil
}

func (x *CreateMovieParams) GetDirectorIds() []uint64 {
	if x != nil {
		return x.DirectorIds
	}
	return nil
}

func (x *CreateMovieParams) GetScreenwriterIds() []uint64 {
	if x != nil {
		return x.ScreenwriterIds
	}
	return nil
}

func (x *CreateMovieParams) GetRating() MPAARating {
	if x != nil {
		return x.Rating
	}
	return MPAARating_MPAA_RATING_UNSPECIFIED
}

func (x *CreateMovieParams) GetCountry() *Country {
	if x != nil {
		return x.Country
	}
	return nil
}

type CreateMoviesBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CreateMoviesBatchResponse) Reset() {
	*x = CreateMoviesBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMoviesBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMoviesBatchResponse) ProtoMessage() {}

func (x *CreateMoviesBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMoviesBatchResponse.ProtoReflect.Descriptor instead.
func (*CreateMoviesBatchResponse) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{6}
}

func (x *CreateMoviesBatchResponse) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalInfo []*ExternalInfo        `protobuf:"bytes,2,rep,name=external_info,json=externalInfo,proto3" json:"external_info,omitempty"`
	Genres       []*Genre               `protobuf:"bytes,3,rep,name=genres,proto3" json:"genres,omitempty"`
	DateOfFilmed *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_of_filmed,json=dateOfFilmed,proto3" json:"date_of_filmed,omitempty"`
	PosterUrl    string                 `protobuf:"bytes,5,opt,name=poster_url,json=posterUrl,proto3" json:"poster_url,omitempty"`
	Name         string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Actors       []*Person              `protobuf:"bytes,7,rep,name=actors,proto3" json:"actors,omitempty"`
	Director     []*Person              `protobuf:"bytes,8,rep,name=director,proto3" json:"director,omitempty"`
	Screenwriter []*Person              `protobuf:"bytes,9,rep,name=screenwriter,proto3" json:"screenwriter,omitempty"`
	Rating       MPAARating             `protobuf:"varint,10,opt,name=rating,proto3,enum=movier.MPAARating" json:"rating,omitempty"`
	Country      *Country               `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{7}
}

func (x *Movie) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Movie) GetExternalInfo() []*ExternalInfo {
	if x != nil {
		return x.ExternalInfo
	}
	return nil
}

func (x *Movie) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Movie) GetDateOfFilmed() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfFilmed
	}
	return nil
}

func (x *Movie) GetPosterUrl() string {
	if x != nil {
		return x.PosterUrl
	}
	return ""
}

func (x *Movie) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Movie) GetActors() []*Person {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *Movie) GetDirector() []*Person {
	if x != nil {
		return x.Director
	}
	return nil
}

func (x *Movie) GetScreenwriter() []*Person {
	if x != nil {
		return x.Screenwriter
	}
	return nil
}

func (x *Movie) GetRating() MPAARating {
	if x != nil {
		return x.Rating
	}
	return MPAARating_MPAA_RATING_UNSPECIFIED
}

func (x *Movie) GetCountry() *Country {
	if x != nil {
		return x.Country
	}
	return nil
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Surname           string                 `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	SecondName        string                 `protobuf:"bytes,4,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	DateOfBirth       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	ProfilePictureUrl string                 `protobuf:"bytes,6,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{8}
}

func (x *Person) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Person) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Person) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Person) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *Person) GetDateOfBirth() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

func (x *Person) GetProfilePictureUrl() string {
	if x != nil {
		return x.ProfilePictureUrl
	}
	return ""
}

type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{9}
}

func (x *Country) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Country) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ExternalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtId  int64          `protobuf:"varint,1,opt,name=ext_id,json=extId,proto3" json:"ext_id,omitempty"`
	Source ExternalSource `protobuf:"varint,2,opt,name=source,proto3,enum=movier.ExternalSource" json:"source,omitempty"`
	Rating float32        `protobuf:"fixed32,3,opt,name=rating,proto3" json:"rating,omitempty"`
	Rates  uint64         `protobuf:"varint,4,opt,name=rates,proto3" json:"rates,omitempty"`
}

func (x *ExternalInfo) Reset() {
	*x = ExternalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalInfo) ProtoMessage() {}

func (x *ExternalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalInfo.ProtoReflect.Descriptor instead.
func (*ExternalInfo) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{10}
}

func (x *ExternalInfo) GetExtId() int64 {
	if x != nil {
		return x.ExtId
	}
	return 0
}

func (x *ExternalInfo) GetSource() ExternalSource {
	if x != nil {
		return x.Source
	}
	return ExternalSource_SOURCE_UNSPECIFIED
}

func (x *ExternalInfo) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ExternalInfo) GetRates() uint64 {
	if x != nil {
		return x.Rates
	}
	return 0
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{11}
}

func (x *Genre) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Genre) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type IDArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []uint64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *IDArray) Reset() {
	*x = IDArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDArray) ProtoMessage() {}

func (x *IDArray) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDArray.ProtoReflect.Descriptor instead.
func (*IDArray) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{12}
}

func (x *IDArray) GetId() []uint64 {
	if x != nil {
		return x.Id
	}
	return nil
}

type DateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3,oneof" json:"to,omitempty"`
}

func (x *DateFilter) Reset() {
	*x = DateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateFilter) ProtoMessage() {}

func (x *DateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateFilter.ProtoReflect.Descriptor instead.
func (*DateFilter) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{13}
}

func (x *DateFilter) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *DateFilter) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type RatingFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *float32 `protobuf:"fixed32,1,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To   *float32 `protobuf:"fixed32,2,opt,name=to,proto3,oneof" json:"to,omitempty"`
}

func (x *RatingFilter) Reset() {
	*x = RatingFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingFilter) ProtoMessage() {}

func (x *RatingFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingFilter.ProtoReflect.Descriptor instead.
func (*RatingFilter) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{14}
}

func (x *RatingFilter) GetFrom() float32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *RatingFilter) GetTo() float32 {
	if x != nil && x.To != nil {
		return *x.To
	}
	return 0
}

type GetPersonsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids         []uint64    `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Name        []string    `protobuf:"bytes,2,rep,name=name,proto3" json:"name,omitempty"`
	Surname     []string    `protobuf:"bytes,3,rep,name=surname,proto3" json:"surname,omitempty"`
	SecondName  []string    `protobuf:"bytes,4,rep,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	DateOfBirth *DateFilter `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Page        uint64      `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
	Limit       uint64      `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetPersonsRequest) Reset() {
	*x = GetPersonsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonsRequest) ProtoMessage() {}

func (x *GetPersonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonsRequest.ProtoReflect.Descriptor instead.
func (*GetPersonsRequest) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{15}
}

func (x *GetPersonsRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetPersonsRequest) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GetPersonsRequest) GetSurname() []string {
	if x != nil {
		return x.Surname
	}
	return nil
}

func (x *GetPersonsRequest) GetSecondName() []string {
	if x != nil {
		return x.SecondName
	}
	return nil
}

func (x *GetPersonsRequest) GetDateOfBirth() *DateFilter {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

func (x *GetPersonsRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPersonsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetPersonsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Persons    []*Person `protobuf:"bytes,1,rep,name=persons,proto3" json:"persons,omitempty"`
	TotalPages uint64    `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	TotalLimit uint64    `protobuf:"varint,3,opt,name=total_limit,json=totalLimit,proto3" json:"total_limit,omitempty"`
}

func (x *GetPersonsResponse) Reset() {
	*x = GetPersonsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonsResponse) ProtoMessage() {}

func (x *GetPersonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonsResponse.ProtoReflect.Descriptor instead.
func (*GetPersonsResponse) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{16}
}

func (x *GetPersonsResponse) GetPersons() []*Person {
	if x != nil {
		return x.Persons
	}
	return nil
}

func (x *GetPersonsResponse) GetTotalPages() uint64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *GetPersonsResponse) GetTotalLimit() uint64 {
	if x != nil {
		return x.TotalLimit
	}
	return 0
}

type CreatePersonsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Persons *Person `protobuf:"bytes,1,opt,name=persons,proto3" json:"persons,omitempty"`
}

func (x *CreatePersonsRequest) Reset() {
	*x = CreatePersonsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePersonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonsRequest) ProtoMessage() {}

func (x *CreatePersonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonsRequest.ProtoReflect.Descriptor instead.
func (*CreatePersonsRequest) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePersonsRequest) GetPersons() *Person {
	if x != nil {
		return x.Persons
	}
	return nil
}

type CreatePersonsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CreatePersonsResponse) Reset() {
	*x = CreatePersonsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePersonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonsResponse) ProtoMessage() {}

func (x *CreatePersonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonsResponse.ProtoReflect.Descriptor instead.
func (*CreatePersonsResponse) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{18}
}

func (x *CreatePersonsResponse) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetGenresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGenresRequest) Reset() {
	*x = GetGenresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenresRequest) ProtoMessage() {}

func (x *GetGenresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenresRequest.ProtoReflect.Descriptor instead.
func (*GetGenresRequest) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{19}
}

type GetGenresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Genres []*Genre `protobuf:"bytes,1,rep,name=genres,proto3" json:"genres,omitempty"`
}

func (x *GetGenresResponse) Reset() {
	*x = GetGenresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenresResponse) ProtoMessage() {}

func (x *GetGenresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenresResponse.ProtoReflect.Descriptor instead.
func (*GetGenresResponse) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{20}
}

func (x *GetGenresResponse) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

type CreateGenresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Genres []*Genre `protobuf:"bytes,1,rep,name=genres,proto3" json:"genres,omitempty"`
}

func (x *CreateGenresRequest) Reset() {
	*x = CreateGenresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGenresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGenresRequest) ProtoMessage() {}

func (x *CreateGenresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGenresRequest.ProtoReflect.Descriptor instead.
func (*CreateGenresRequest) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{21}
}

func (x *CreateGenresRequest) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

type CreateGenresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CreateGenresResponse) Reset() {
	*x = CreateGenresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_movier_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGenresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGenresResponse) ProtoMessage() {}

func (x *CreateGenresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_movier_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGenresResponse.ProtoReflect.Descriptor instead.
func (*CreateGenresResponse) Descriptor() ([]byte, []int) {
	return file_pb_movier_proto_rawDescGZIP(), []int{22}
}

func (x *CreateGenresResponse) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_pb_movier_proto protoreflect.FileDescriptor

var file_pb_movier_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0xb2, 0x03, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x01, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x02, 0x52, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x7c, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x06, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa6, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x39, 0x0a,
	0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66,
	0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x72, 0x2e, 0x4d, 0x50, 0x41, 0x41, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x2d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0xcd, 0x03, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0e, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x46, 0x69, 0x6c, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x72, 0x2e, 0x4d, 0x50, 0x41, 0x41, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0xd7, 0x01, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x41, 0x0a, 0x07, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a,
	0x0c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a,
	0x06, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x2b, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x19, 0x0a, 0x07, 0x49, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x44,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f, 0x22,
	0x4c, 0x0a, 0x0c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f, 0x22, 0xd6, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x07,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x29, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x2a, 0x4f,
	0x0a, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x4f, 0x50, 0x4f, 0x49, 0x53, 0x4b, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x49, 0x4d, 0x44, 0x42, 0x10, 0x02, 0x2a,
	0x91, 0x01, 0x0a, 0x0a, 0x4d, 0x50, 0x41, 0x41, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b,
	0x0a, 0x17, 0x4d, 0x50, 0x41, 0x41, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x50, 0x41, 0x41, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x47, 0x10, 0x01, 0x12, 0x12,
	0x0a, 0x0e, 0x4d, 0x50, 0x41, 0x41, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x47,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x50, 0x41, 0x41, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x47, 0x5f, 0x31, 0x33, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x50, 0x41,
	0x41, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11,
	0x4d, 0x50, 0x41, 0x41, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x43, 0x5f, 0x31,
	0x37, 0x10, 0x05, 0x32, 0xae, 0x04, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x12, 0x18,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73,
	0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x1c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x72,
	0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6b, 0x75, 0x79, 0x6f, 0x74, 0x61, 0x67, 0x61, 0x6e, 0x2f, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_movier_proto_rawDescOnce sync.Once
	file_pb_movier_proto_rawDescData = file_pb_movier_proto_rawDesc
)

func file_pb_movier_proto_rawDescGZIP() []byte {
	file_pb_movier_proto_rawDescOnce.Do(func() {
		file_pb_movier_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_movier_proto_rawDescData)
	})
	return file_pb_movier_proto_rawDescData
}

var file_pb_movier_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pb_movier_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_pb_movier_proto_goTypes = []interface{}{
	(ExternalSource)(0),               // 0: movier.ExternalSource
	(MPAARating)(0),                   // 1: movier.MPAARating
	(*CreateMoviesBatchRequest)(nil),  // 2: movier.CreateMoviesBatchRequest
	(*DeleteMoviesRequest)(nil),       // 3: movier.DeleteMoviesRequest
	(*DeleteMoviesResponse)(nil),      // 4: movier.DeleteMoviesResponse
	(*GetMoviesRequest)(nil),          // 5: movier.GetMoviesRequest
	(*GetMoviesResponse)(nil),         // 6: movier.GetMoviesResponse
	(*CreateMovieParams)(nil),         // 7: movier.CreateMovieParams
	(*CreateMoviesBatchResponse)(nil), // 8: movier.CreateMoviesBatchResponse
	(*Movie)(nil),                     // 9: movier.Movie
	(*Person)(nil),                    // 10: movier.Person
	(*Country)(nil),                   // 11: movier.Country
	(*ExternalInfo)(nil),              // 12: movier.ExternalInfo
	(*Genre)(nil),                     // 13: movier.Genre
	(*IDArray)(nil),                   // 14: movier.IDArray
	(*DateFilter)(nil),                // 15: movier.DateFilter
	(*RatingFilter)(nil),              // 16: movier.RatingFilter
	(*GetPersonsRequest)(nil),         // 17: movier.GetPersonsRequest
	(*GetPersonsResponse)(nil),        // 18: movier.GetPersonsResponse
	(*CreatePersonsRequest)(nil),      // 19: movier.CreatePersonsRequest
	(*CreatePersonsResponse)(nil),     // 20: movier.CreatePersonsResponse
	(*GetGenresRequest)(nil),          // 21: movier.GetGenresRequest
	(*GetGenresResponse)(nil),         // 22: movier.GetGenresResponse
	(*CreateGenresRequest)(nil),       // 23: movier.CreateGenresRequest
	(*CreateGenresResponse)(nil),      // 24: movier.CreateGenresResponse
	(*timestamppb.Timestamp)(nil),     // 25: google.protobuf.Timestamp
}
var file_pb_movier_proto_depIdxs = []int32{
	7,  // 0: movier.CreateMoviesBatchRequest.movies:type_name -> movier.CreateMovieParams
	15, // 1: movier.GetMoviesRequest.date_of_released:type_name -> movier.DateFilter
	16, // 2: movier.GetMoviesRequest.rating:type_name -> movier.RatingFilter
	9,  // 3: movier.GetMoviesResponse.movies:type_name -> movier.Movie
	12, // 4: movier.CreateMovieParams.external_info:type_name -> movier.ExternalInfo
	25, // 5: movier.CreateMovieParams.date_of_released:type_name -> google.protobuf.Timestamp
	1,  // 6: movier.CreateMovieParams.rating:type_name -> movier.MPAARating
	11, // 7: movier.CreateMovieParams.country:type_name -> movier.Country
	12, // 8: movier.Movie.external_info:type_name -> movier.ExternalInfo
	13, // 9: movier.Movie.genres:type_name -> movier.Genre
	25, // 10: movier.Movie.date_of_filmed:type_name -> google.protobuf.Timestamp
	10, // 11: movier.Movie.actors:type_name -> movier.Person
	10, // 12: movier.Movie.director:type_name -> movier.Person
	10, // 13: movier.Movie.screenwriter:type_name -> movier.Person
	1,  // 14: movier.Movie.rating:type_name -> movier.MPAARating
	11, // 15: movier.Movie.country:type_name -> movier.Country
	25, // 16: movier.Person.date_of_birth:type_name -> google.protobuf.Timestamp
	0,  // 17: movier.ExternalInfo.source:type_name -> movier.ExternalSource
	25, // 18: movier.DateFilter.from:type_name -> google.protobuf.Timestamp
	25, // 19: movier.DateFilter.to:type_name -> google.protobuf.Timestamp
	15, // 20: movier.GetPersonsRequest.date_of_birth:type_name -> movier.DateFilter
	10, // 21: movier.GetPersonsResponse.persons:type_name -> movier.Person
	10, // 22: movier.CreatePersonsRequest.persons:type_name -> movier.Person
	13, // 23: movier.GetGenresResponse.genres:type_name -> movier.Genre
	13, // 24: movier.CreateGenresRequest.genres:type_name -> movier.Genre
	2,  // 25: movier.MovierService.CreateMoviesBatch:input_type -> movier.CreateMoviesBatchRequest
	5,  // 26: movier.MovierService.GetMovies:input_type -> movier.GetMoviesRequest
	3,  // 27: movier.MovierService.DeleteMovies:input_type -> movier.DeleteMoviesRequest
	17, // 28: movier.MovierService.GetPersons:input_type -> movier.GetPersonsRequest
	19, // 29: movier.MovierService.CreatePersonsBatch:input_type -> movier.CreatePersonsRequest
	21, // 30: movier.MovierService.GetGenres:input_type -> movier.GetGenresRequest
	23, // 31: movier.MovierService.CreateGenresBatch:input_type -> movier.CreateGenresRequest
	8,  // 32: movier.MovierService.CreateMoviesBatch:output_type -> movier.CreateMoviesBatchResponse
	6,  // 33: movier.MovierService.GetMovies:output_type -> movier.GetMoviesResponse
	4,  // 34: movier.MovierService.DeleteMovies:output_type -> movier.DeleteMoviesResponse
	18, // 35: movier.MovierService.GetPersons:output_type -> movier.GetPersonsResponse
	20, // 36: movier.MovierService.CreatePersonsBatch:output_type -> movier.CreatePersonsResponse
	22, // 37: movier.MovierService.GetGenres:output_type -> movier.GetGenresResponse
	24, // 38: movier.MovierService.CreateGenresBatch:output_type -> movier.CreateGenresResponse
	32, // [32:39] is the sub-list for method output_type
	25, // [25:32] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_pb_movier_proto_init() }
func file_pb_movier_proto_init() {
	if File_pb_movier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_movier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMoviesBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMoviesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMoviesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMoviesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMoviesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMovieParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMoviesBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePersonsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePersonsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGenresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_movier_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGenresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_movier_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_pb_movier_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_pb_movier_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_movier_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_movier_proto_goTypes,
		DependencyIndexes: file_pb_movier_proto_depIdxs,
		EnumInfos:         file_pb_movier_proto_enumTypes,
		MessageInfos:      file_pb_movier_proto_msgTypes,
	}.Build()
	File_pb_movier_proto = out.File
	file_pb_movier_proto_rawDesc = nil
	file_pb_movier_proto_goTypes = nil
	file_pb_movier_proto_depIdxs = nil
}
